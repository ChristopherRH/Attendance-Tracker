@{
    ViewBag.Title = "Table Results";
}
@using AttendanceTracker.Controllers;

@model  IEnumerable<AttendanceTracker.Models.BossesNeeded>
@{
    var list = Model;
    var loginAs = Session["UserName"] ?? null;
}
<h3>Loot List</h3>
<table class="table" id="attendance">
    <thead><tr><th>Name</th><th>Goroth</th><th>Demonic Inquisition</th><th>Harjatan</th><th>Sisters of the Moon</th><th>Misstress Sassz'ine</th><th>Desolate Host</th><th>Maiden of Vigilance</th><th>Fallen Avatar</th><th>Kil'Jaeden</th><td></td></tr></thead>
    <tbody>
        @{
            var controller = (AccountController)ViewContext.Controller;
            var trialUpUsers = controller.GetCurrentUsers().ToList().Where(x => !x.Role.Equals("None")).ToList();
            foreach (var x in list)
            {
                if (trialUpUsers.Where(y => y.Name.Equals(x.User)).ToList().Count > 0)
                {
                    if (loginAs != null && x.User.Equals(loginAs.ToString(), StringComparison.InvariantCultureIgnoreCase))
                    {
                        <tr>
                            <td>@x.User</td>
                            @{var props = x.GetType().GetProperties();}
                            @for (int i = 3; i <= 11; i++)
                        {
                            var id = $"boss{i - 2}";
                            var value = x.GetType().GetProperty(props[i].Name).GetValue(x, null).ToString();
                                <td>
                                    <select id="@id">
                                        <option>@(value.Equals("true", StringComparison.CurrentCultureIgnoreCase) ? "Yes" : "No")</option>
                                        <option>@(value.Equals("true", StringComparison.CurrentCultureIgnoreCase) ? "No" : "Yes")</option>
                                    </select>
                                </td>
                            }

                            <td>
                                <input type="button" class="btn btn-success" value="Update" onclick='UpdateUserBosses("@x.Id")' />
                            </td>
                        </tr>
                        }
                        else
                        {
                            <tr style="background-color:@Html.Raw((x.Highlighted) ? "rgba(0, 255, 255, 0.2)" : "")">
                                <td>@x.User</td>
                                <td style="color:@Html.Raw((x.Goroth) ? "green" : "red")">@(x.Goroth ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.Di) ? "green" : "red")">@(x.Di ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.Harjatan) ? "green" : "red")">@(x.Harjatan ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.Sisters) ? "green" : "red")">@(x.Sisters ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.Host) ? "green" : "red")">@(x.Host ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.Mistress) ? "green" : "red")">@(x.Mistress ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.Maiden) ? "green" : "red")">@(x.Maiden ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.FallenAvatar) ? "green" : "red")">@(x.FallenAvatar ? "Yes" : "No")</td>
                                <td style="color:@Html.Raw((x.Kiljaeden) ? "green" : "red")">@(x.Kiljaeden ? "Yes" : "No")</td>
                                <td></td>
                            </tr>
                                }
                            }
                        }
        }
    </tbody>
</table>


@{

    if (loginAs == null)
    {
        <footer>Not Logged In</footer>
    }
    else
    {
        <footer>Logged in as: @loginAs.ToString()</footer>
    }
}
